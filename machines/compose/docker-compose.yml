version: '3'
services:

  db:
    image: "mysql:5.7"
    ports:
      - "3306:3306"
    volumes:
      - coursys_db:/var/lib/mysql:rw
    environment:
      MYSQL_DATABASE: coursys
      MYSQL_USER: coursysuser
      MYSQL_PASSWORD: coursyspassword
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  memcache:
    image: "memcached:1.5"

  app:
    build:
      context: ../..
      dockerfile: Dockerfile-app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - memcache
    volumes:
      - ../../:/code:ro
      - coursys_static:/static:rw
      - ./localsettings.py:/code/courses/localsettings.py:ro
      - ./secrets.py:/code/courses/secrets.py:ro

  rabbitmq:
    image: "rabbitmq:3.7-alpine"
    volumes:
      - coursys_rabbitmq:/var/lib/rabbitmq:rw

  celery:
    # TODO: on first startup, should wait for db migration
    build:
      context: ../..
      dockerfile: Dockerfile-celery
    depends_on:
      - rabbitmq
      - db
      - app # to force build order: Dockerfile-celery uses app image
    volumes:
      #- coursys_logs_celery:/var/logs/celery:rw
      - ../../:/code:ro
      - ./localsettings.py:/code/courses/localsettings.py:ro
      - ./secrets.py:/code/courses/secrets.py:ro

  web:
    image: "nginx:stable"
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - app
    volumes:
      - coursys_static:/static:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../chef/cookbooks/coursys_proddev/files/default/self-ssl.key:/etc/nginx/cert.key:ro
      - ../chef/cookbooks/coursys_proddev/files/default/self-ssl.pem:/etc/nginx/cert.pem:ro
      - coursys_logs_nginx:/var/log/nginx:rw

  solr:
    build:
      context: ./
      dockerfile: Dockerfile-solr
    ports:
      - "8983:8983"
    volumes:
      - coursys_solr:/var/solr/data


volumes:
  coursys_static:
  coursys_db:
  coursys_solr:
  coursys_rabbitmq:
  coursys_logs_nginx:
  coursys_logs_celery: