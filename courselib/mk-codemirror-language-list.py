#!/usr/bin/env python3

# Create the codemirror_language_list.py file: list of all languages
# supported by codemirror
#   python3 mk-codemirror-language-list.py > codemirror_language_list.py


import urllib.request
from bs4 import BeautifulSoup
import re, sys, os
from django.conf import settings

os.environ['DJANGO_SETTINGS_MODULE'] = 'courses.settings'
MODE_LIST_URL = 'https://codemirror.net/mode/'
MODE_URL_TEMPLATE = settings.STATIC_URL + 'codemirror/mode/{mode}/{mode}.js'

# regex that links to modes must follow: doesn't get sub-modes like css/less.html
mode_link_re = re.compile(r'^([\w\-\.]+)/index.html$')

IGNORE_MODES = {
    # takes more config that we can handle:
    'htmlembedded',
    'htmlmixed',
    # aren't languages I can conceive our students would have to write:
    'asterisk',
    'brainfuck',
    'mbox',
    'mirc',
    'mscgen',
    'mumps',
    'asciiarmor',
    'properties',
    'spreadsheet',
    'ttcn',
    'ttcn-cfg',
    'yaml-frontmatter',
}

LABEL_REPLACEMENTS = {
    'Brainfuck': 'Brainf*ck',
    'Django': 'Django template',
    'GitHub-flavour': 'Markdown, GitHub-flavour',
    'Literate': 'Haskell, Literate',
    'Tornado': 'Tornado template',
}


def main():
    page = urllib.request.urlopen(MODE_LIST_URL)
    soup = BeautifulSoup(page, 'html.parser')

    print('# This file is generated by mk-codemirror-language-list.py.')
    print("# Probably don't edit it by hand.")
    print('# List of (mode_name, human_label, js_url)')
    print()
    print('CODEMIRROR_MODES = [')

    modes = [('plain-text', 'Plain text (no syntax highlighting)', '')]

    for a in soup.find_all('a'):
        m = mode_link_re.match(a.get('href'))
        if m:
            if m.group(1) == '..':
                continue
            mode = m.group(1)
            if mode in IGNORE_MODES:
                continue

            label = ''.join(a.contents)
            label = LABEL_REPLACEMENTS.get(label, label)
            url = MODE_URL_TEMPLATE.format(mode=mode)

            modes.append((mode, label, url))


        else:
            sys.stderr.write('Ignoring codemirror mode list link %s.\n' % (a.get('href'),))

    for m in sorted(modes):
        print('    %r,' % (m,))

    print(']')

main()